# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def accept_invitation_registrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audience_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def audiences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def brand_setup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def brand_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def brands_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_email_change_registrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def circle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def circles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_setup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_registration_registrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_audience_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_brand_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_circle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_notification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_person_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_tie_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def groups_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def memberships_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_activity_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_audience_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_brand_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_circle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_group_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_membership_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_notification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_person_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_tie_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def note_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notifications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def omniauth_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def omniauth_failure_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passwords_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def people_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def person_setup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def person_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def registrations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_in_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_out_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sign_up_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tie_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def ties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def welcome_setup_url(*args); end
end
